///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HB_INSTALL_AUTO
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TestLinkOnWelcome recording.
    /// </summary>
    [TestModule("b2ddd222-db92-4814-8e24-a6e65764eaa3", ModuleType.Recording, 1)]
    public partial class TestLinkOnWelcome : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HB_INSTALL_AUTORepository repository.
        /// </summary>
        public static HB_INSTALL_AUTORepository repo = HB_INSTALL_AUTORepository.Instance;

        static TestLinkOnWelcome instance = new TestLinkOnWelcome();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TestLinkOnWelcome()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TestLinkOnWelcome Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreen'.", repo.WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreenInfo, new RecordItemIndex(0));
            Validate.Exists(repo.WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreenInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreen' at Center.", repo.WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreenInfo, new RecordItemIndex(1));
            repo.WelcomeToHeavyBidScreen.LinkNewUserWelcomeScreen.Click();
            Delay.Milliseconds(200);
            
            // E.6
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nE.6\r\nWaiting 30s to exist. Associated repository item: 'GoogleChrome.TabArticleHCSS'", repo.GoogleChrome.TabArticleHCSSInfo, new ActionTimeout(30000), new RecordItemIndex(2));
                repo.GoogleChrome.TabArticleHCSSInfo.WaitForExists(30000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            // E.6
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nE.6\r\nWaiting 30s to exist. Associated repository item: 'GoogleChrome.LinkHelpHCSS'", repo.GoogleChrome.LinkHelpHCSSInfo, new ActionTimeout(30000), new RecordItemIndex(3));
                repo.GoogleChrome.LinkHelpHCSSInfo.WaitForExists(30000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            // E.6
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nE.6\r\nValidating AttributeRegEx (Text~'[help][hcss]') on item 'GoogleChrome.AddressBar'.", repo.GoogleChrome.AddressBarInfo, new RecordItemIndex(4));
                Validate.Attribute(repo.GoogleChrome.AddressBarInfo, "Text", new Regex("[help][hcss]"), Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            // E.6
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nE.6\r\nValidating AttributeRegEx (Text~'[Article][List]') on item 'GoogleChrome.Tabs'.", repo.GoogleChrome.TabsInfo, new RecordItemIndex(5));
                Validate.Attribute(repo.GoogleChrome.TabsInfo, "Text", new Regex("[Article][List]"), Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            // E.6
            Report.Log(ReportLevel.Info, "Application", "E.6\r\nClosing application containing item 'GoogleChrome'.", repo.GoogleChrome.SelfInfo, new RecordItemIndex(6));
            Host.Current.CloseApplication(repo.GoogleChrome.Self, 10000);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
